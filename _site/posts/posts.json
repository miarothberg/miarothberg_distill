[
  {
    "path": "posts/2021-11-04-lendingshiny/",
    "title": "Lending/Loan Predictions Shiny App",
    "description": "My second shiny app, created as part of Assignment 5 in my Advanced Data Science class.",
    "author": [
      {
        "name": "Mia Rothberg",
        "url": {}
      }
    ],
    "date": "2021-11-04",
    "categories": [],
    "contents": "\nFor this app, I used the lending_club data available in the modeldata library, which is part of tidymodels to create a ceteris parabus profile for a predictive random forest model I built in Assignment 3. The app allows users to modify all of the predictive variables in the dataset to determine the model’s prediction of the probability that the loan has been paid back fully or is currently on time.\nThe app is available here: https://miarothberg.shinyapps.io/assignment_05_shiny/. The graph will look something like this:\nCeteris Parabus\n\n\n",
    "preview": "posts/2021-11-04-lendingshiny/shinyimage.png",
    "last_modified": "2021-11-04T08:34:13-05:00",
    "input_file": {}
  },
  {
    "path": "posts/2021-10-26-tidytuesday5/",
    "title": "Tidy Tuesday 5: Ultramarathons",
    "description": "An analysis of speed, gender, and age in the 2019 P'tiot Sparnatrail in Epernay, France.",
    "author": [
      {
        "name": "Mia Rothberg",
        "url": {}
      }
    ],
    "date": "2021-10-26",
    "categories": [],
    "contents": "\n\n\nlibrary(tidyverse)     # for graphing and data cleaning\nlibrary(lubridate)     # for date manipulation\nlibrary(ggthemes)      # for even more plotting themes\nlibrary(sjmisc)\nlibrary(scales)\n\n\n\n\n\nrace <- readr::read_csv('https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2021/2021-10-26/race.csv')\nultra_rankings <- readr::read_csv('https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2021/2021-10-26/ultra_rankings.csv')\n\n\n\n\n\nultra_rankings_grand <- ultra_rankings %>% \n  filter(race_year_id == 54013) %>% \n  filter(!is.na(gender)) %>%\n  mutate(time = hms(time)) %>% \n  mutate(time_h = hour(time) + minute(time)/60 + second(time)/360) %>% \n  mutate(kph = 33.3/time_h) %>% \n  group_by(age, gender) %>% \n  summarize(mean_kph = mean(kph))\n\nultra_rankings_grand %>% \n  ggplot(aes(x = age, y = mean_kph, color = gender)) +\n  geom_line() +\n  scale_color_manual(values = c(\"blue\", \"hotpink\")) +\n  theme_minimal() +\n  labs(x = \"\",\n       y = \"Mean Speed (kph)\",\n       title = \"Speed in Relationship to Age and Gender in the 2019 P'tiot Sparnatrail Race\",\n       caption = \"Plot by Mia Rothberg\") +\n  theme(plot.title.position = \"plot\",\n        legend.position = \"none\")\n\n\n\n\n\nThis graph shows the men in the P’tiot Sparnatrail Race peaking at the age of 30, while the women are fastest at the age of 37. The women have a secondary peak at the age of 26 but are not consistently fast between then and 37, while the men are consistently fastest in their 20s. I chose to use stereotypical colors for the two genders in order to eliminate the need for a legend.\n\n\n\n\n",
    "preview": "posts/2021-10-26-tidytuesday5/tidytuesday5_files/figure-html5/unnamed-chunk-2-1.png",
    "last_modified": "2021-11-04T08:25:03-05:00",
    "input_file": {}
  },
  {
    "path": "posts/2021-10-19-tidytuesday4/",
    "title": "Tidy Tuesday 4: Pumpkins ",
    "description": "Tidy Tuesday from the week of October 19 using pumpkin data.",
    "author": [
      {
        "name": "Mia Rothberg",
        "url": {}
      }
    ],
    "date": "2021-10-19",
    "categories": [],
    "contents": "\n\n\nlibrary(tidyverse)     # for graphing and data cleaning\nlibrary(lubridate)     # for date manipulation\nlibrary(ggthemes)      # for even more plotting themes\nlibrary(sjmisc)\nlibrary(scales)\n\n\n\n\n\n# Read in the data for the week\npumpkins <- readr::read_csv('https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2021/2021-10-19/pumpkins.csv')\n\npumpkins <- pumpkins %>% \n  separate(id, into = c(\"year\", \"class\"), convert = TRUE) %>% \n  mutate(place = as.numeric(place)) %>% \n  mutate(grower_name = ifelse(grower_name == \"Ellenbecker, Todd & Seqnoia\", \"Ellenbecker, Todd & Sequoia\", grower_name))\n\n\n\n\n\npumpkins_50 <- pumpkins %>% \n  filter(place <= 50) %>% \n  group_by(grower_name, country) %>% \n  summarize(number = n()) %>% \n  arrange(desc(number)) %>% \n  head(10)\n\n\n\n\n\npumpkins_50 %>% \n  ggplot(aes(y = grower_name, x = number, fill = country)) +\n  geom_col() +\n  scale_fill_manual(values = c(\"red\", \"blue\")) +\n  theme_minimal() +\n  theme(legend.title = element_blank(), \n        panel.grid.major.y = element_blank(), # remove the vertical grid lines\n        panel.grid.minor.y = element_blank(),\n        panel.grid.major.x = element_blank(),\n        panel.grid.minor.x = element_blank(),\n        plot.title.position = \"plot\") +\n  scale_x_continuous(expand = c(0,0)) +\n  labs(x = \"\",\n       y = \"\",\n       title = \"Growers with Most Pumpkins Ranked in the Top 50, 2013 to 2021, by Country\")\n\n\n\n\n\nFor this Tidy Tuesday, I analyzed the top growers of the pumpkins data. I removed both vertical and horizontal grid lines because they seemed extraneous for this graph. It wasn’t surprising that only two countries were represented in these top 10 growers, but there were many other countries represented in the broader dataset.\n\n\n\n\n",
    "preview": "posts/2021-10-19-tidytuesday4/tidytuesday4_files/figure-html5/unnamed-chunk-2-1.png",
    "last_modified": "2021-10-19T13:45:29-05:00",
    "input_file": {}
  },
  {
    "path": "posts/2021-10-13-eddyfluxshiny/",
    "title": "Eddyflux Shiny App",
    "description": "My first Shiny App, created to showcase Harvard Forest data analyzed in my Big Data in Ecology class.",
    "author": [
      {
        "name": "Mia Rothberg",
        "url": {}
      }
    ],
    "date": "2021-10-13",
    "categories": [],
    "contents": "\nI created my first Shiny App to help me with work for two classes: Advanced Data Science and Big Data in Ecology. The data used is from an eddy flux tower in Harvard Forest, a major field site in the world of ecology. It has data on Net Ecoystem Exchange (NEE), Gross Ecosystem Exchange (GEE), respiration, radiation, and temperature at 27 m high (among many others) with measurements taken every 15 minutes starting in 1991.\nThis app showcases my use of user interaction, variable selection, and bootstrap themeing, and is available at https://miarothberg.shinyapps.io/assignment_04_10142021_shiny/.\n\n\n\n",
    "preview": {},
    "last_modified": "2021-10-14T10:07:06-05:00",
    "input_file": {}
  },
  {
    "path": "posts/2021-10-05-tidytuesday3/",
    "title": "Tidy Tuesday 3: Registered Nurses",
    "description": "Tidy Tuesday from the week of October 5 using data on registered nurses and the ggmap package.",
    "author": [
      {
        "name": "Mia Rothberg",
        "url": {}
      }
    ],
    "date": "2021-10-05",
    "categories": [],
    "contents": "\n\n\nlibrary(tidyverse)     # for graphing and data cleaning\nlibrary(ggthemes)      # for even more plotting themes\nlibrary(scales)\nlibrary(plotly)\nlibrary(ggmap)\nlibrary(tmaptools)\nlibrary(maps)\n\n\n\n\n\n# Read in the data for the week\nnurses <- readr::read_csv('https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2021/2021-10-05/nurses.csv')\n\npopulation <- read.csv(\"tidy-tues-nst-est2020.csv\")\n\n\n\n\n\npopulation <- population %>%\n  filter(STATE > 0) %>% \n  filter(STATE < 57) %>% \n  select(NAME, POPESTIMATE2010, POPESTIMATE2020)\n\n\n\n\n\nnurses_joined <- nurses %>% \n  left_join(population, by = c(\"State\" = \"NAME\"))\n\n\n\n\n\nnurses_2019_2020 <- nurses_joined %>% \n  filter(Year == 2010 | Year == 2020) %>% \n  mutate(std_registered_per_1000 = ifelse(Year == 2010, `Total Employed RN`/POPESTIMATE2010 * 1000, `Total Employed RN`/POPESTIMATE2020 * 1000)) %>% \n  mutate(`Registered Nurses per 1000 People` = std_registered_per_1000) %>% \n  mutate(state_lower = tolower(State))\n\n\n\n\n\nstates_map <- map_data(\"state\")\n\nnurses_map <- nurses_2019_2020 %>% \n  filter(Year == 2020) %>% \n  ggplot(aes(fill = std_registered_per_1000, label = State, label2 = `Registered Nurses per 1000 People`, label3 = `Annual Salary Median`)) +\n  geom_map(aes(map_id = state_lower), color=\"gray\", size=0.3, map = states_map) +\n  expand_limits(x = states_map$long, y = states_map$lat) + \n  theme_map() +\n  scale_fill_gradient(low=\"white\", high = \"navy\") +\n  labs(fill = \"Registered Nurses per \\n1000 People in 2020\")\n\n#ggplotly(nurses_map, tooltip = c(\"label\", \"label2\", \"label3\"))\n\n\n\nplotly_map <- plotly::ggplotly(nurses_map, tooltip = c(\"label\", \"label2\", \"label3\"))\n\nhtmlwidgets::saveWidget(plotly_map, \"nurses_plotly_map.html\")\n\n\n\n\n\nprint( htmltools::tags$iframe(src=\"nurses_plotly_map.html\", width=600, height=480) )\n\n\n\n\n\n\nFor this Tidy Tuesday, I looked at the geospatial relationship of number of registered nurses per 1000 people in a state. I decided to add animation via ggplotly to display the state name, the exact number of nurses, and the median annual salary of nurses in that state. I was surprised to see that South Dakota had the most nurses per population, perhaps because it has the lowest population.\n\n\n\n\n",
    "preview": {},
    "last_modified": "2021-10-05T11:19:21-05:00",
    "input_file": {}
  },
  {
    "path": "posts/2021-09-21-tidy-tuesday-september-21/",
    "title": "Tidy Tuesday 2: The Emmys",
    "description": "Tidy Tuesday from the week of September 21 using historical Emmys data.",
    "author": [
      {
        "name": "Mia Rothberg",
        "url": {}
      }
    ],
    "date": "2021-09-21",
    "categories": [],
    "contents": "\n\n\nlibrary(tidyverse)     # for graphing and data cleaning\nlibrary(lubridate)     # for date manipulation\nlibrary(ggthemes)      # for even more plotting themes\nlibrary(sjmisc)\nlibrary(scales)\n\n\n\n\n\n# Read in the data for the week\nnominees <- readr::read_csv('https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2021/2021-09-21/nominees.csv')\n\n\n\n\n\nnominees_edited <- nominees %>% \n  mutate(short_category = str_sub(category, 1, 21)) %>% \n  filter(short_category == \"Outstanding Directing\") %>% \n  filter(distributor == \"Netflix\" | distributor == \"Hulu\" | distributor == \"Prime Video\") %>% \n  group_by(year, distributor) %>% \n  count()\n\n\n\n\n\nnominees_edited %>% \n  ggplot(aes(x = year, y = n, color = reorder(distributor,n))) +\n  geom_line() +\n  theme_bw() +\n  labs(title = \"Emmy Nominations and Wins for Outstanding Directing in All Genres\",\n      subtitle = \"For 3 Top Streaming Services\",\n       y = \"Count\",\n       x = \"\",\n      color = \"\") +\n  scale_color_manual(values = c(\"green\", \"cornflowerblue\", \"red\")) +\n  guides(color = guide_legend(reverse=TRUE)) +\n  scale_x_continuous(breaks= pretty_breaks())\n\n\n\n\nFor this week’s Tidy Tuesday, I looked at the “Outstanding Director” Emmy nominations and wins for three top streaming services over time, Netflix, Prime Video, and Hulu. As expected, Netflix has been much more dominant than the other two, reaching a maximum of 14 nominations in 2020, but the comparitive value of this information will increase as the other services grow. I chose to color each service based on the coloring in its logo, making the legend necessary only to those who are unfamiliar with them.\n\n\n\n",
    "preview": "posts/2021-09-21-tidy-tuesday-september-21/tidy-tuesday-september-21_files/figure-html5/graph-1.png",
    "last_modified": "2021-10-05T10:53:42-05:00",
    "input_file": {}
  }
]
